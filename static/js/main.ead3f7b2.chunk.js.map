{"version":3,"sources":["assets/config.ts","utils/getUserInfo.ts","assets/gameEnv.ts","utils/calculate.ts","components/InsertUser.tsx","utils/division.ts","assets/color.ts","components/DivTeam.tsx","utils/checkValidTeam.ts","components/DeleteUser.tsx","components/DragNDrop.tsx","components/Adsense.tsx","components/menual/MenualContent.tsx","components/menual/MenualModal.tsx","components/menual/Menual.tsx","App.tsx","index.tsx"],"names":["serverUrl","getUserAccountId","userId","a","axios","get","response","console","log","data","userAccountId","Error","getUserInfo","id","userInfo","tierMMR","IRON","BRONZE","SILVER","GOLD","PLATINUM","DIAMOND","MASTER","GRANDMASTER","CHALLENGER","rankMMR","IV","III","II","I","calculate","wins","losses","rank","tier","leaguePoints","Math","round","InsertContainer","styled","div","Search","input","SearchButton","button","divUserId","combinedID","divisionId","replace","split","userIdGroup","map","element","trim","undefined","underRankMMR","underRankUserInfo","position","team","mmr","getUserRankInfo","userInfoList","el","queueType","filter","getUserInfoList","idState","Promise","all","name","userRankInfo","length","message","alert","fetchUserInfoList","filtUndefinedData","InsertUser","props","setUserInfoList","React","useState","setIdState","addId","e","placeholder","type","onChange","target","value","onClick","makeBitMaskDivision","teamBitMask","userNoTeam","sort","b","userOneTeam","userTwoTeam","allUser","push","splitedIdx","splice","compareOne","idx","compareTwo","divisionPosition","userInfoListWithIdx","topUser","jugUser","midUser","adcUser","supUser","checkSelectedTeam","userListLength","i","teamOne","teamTwo","reverseI","colors","DivTeamContainer","PrintTeam","TeamName","h4","teamColor","css","NotDivTeam","p","PrintUserID","DivTeam","userList","diff","teamOneBitMask","teamTwoBitMask","teamOneMMR","teamTwoMMR","count","k","teamDiff","abs","index","redTeam","blueTeam","divisionTeam","overlapPosition","setTeamOne","Set","size","setTeamTwo","excessPersonnel","DeleteButton","DeleteUser","filterUser","userIndex","DragNDropStyle","DropStyle","TeamTag","teamNumber","PrintUserInfo","SelectUserPosition","select","DragNDrop","positionChange","changeUserPosition","onDragEnd","result","draggableId","destination","movedTeam","droppableId","moveUserInfo","parseInt","provided","droppableProps","ref","innerRef","dragHandleProps","draggableProps","Adsense","ContentText","MenualContent","Background","ModalWrapper","MenualModal","showModal","setShowModal","MenualText","Menual","SelectOptionUser","DivTeamButton","App","runDivTeam","setRunDivTeam","userLang","navigator","language","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ead3f7b2.chunk.js","sourcesContent":["export const serverUrl = 'https://us-central1-seismic-sweep-318403.cloudfunctions.net';","import axios from 'axios'\nimport { serverUrl } from '../assets/config'\n\nexport const getUserAccountId = async (userId:string): Promise<any>=> {\n    // const response = await axios.get(`http://localhost:5000/seismic-sweep-318403/us-central1/getUserInfo/fetchUserAccountId?userId=${userId}`)\n    const response = await axios.get(`${serverUrl}/getUserInfo/fetchUserAccountId?userId=${userId}`)\n    console.log(response.data)\n    if (response) {\n        return response.data.userAccountId\n    } else {\n        throw new Error('Not Exist UserID')\n    }\n}\n\nexport const getUserInfo = async (id:string): Promise<any> => {\n    // const response = await axios.get(`http://localhost:5000/seismic-sweep-318403/us-central1/getUserInfo/fetchUserInfo?id=${id}`,)\n    const response = await axios.get(`${serverUrl}/getUserInfo/fetchUserInfo?id=${id}`,)\n    if (response) {\n        return response.data.userInfo\n    } else {\n        throw new Error('Not Exist UserInfo')\n    }\n}","/**\n   * i 450 ~ 750\n   * b 800 ~ 1100\n   * s 1150 ~ 1450\n   * g 1500 ~ 1800\n   * p 1850 ~ 2150\n   * d 2200 ~ 2500\n   * m 2550 ~ 3050\n   * gm 3100 + point\n   */\ntype TierMMR = {\n  [k in string]: number\n}\n\nexport const tierMMR:TierMMR = {\n  IRON: 450,\n  BRONZE:800,\n  SILVER:1150,\n  GOLD:1500,\n  PLATINUM:1850,\n  DIAMOND:2200,\n  // 마스터티어부터 모두 'I'티어이기 때문에 300점을 깍아줬다 calculate에서 300을 더하기 때문\n  MASTER:2250,\n  GRANDMASTER:2250,\n  CHALLENGER:2250,\n}\n\ntype RankMMR = {\n  [k in string]:number\n}\n\nexport const rankMMR:RankMMR = {\n  IV: 0,\n  III: 100,\n  II: 200,\n  I: 300,\n}\n\nexport const winPercentMMR = 10","import { MaterialMMR } from '../../types/type';\nimport { rankMMR, tierMMR, winPercentMMR } from '../assets/gameEnv';\n\nconst winRateMMr = (wins:number,losses:number):number => {\n  const winrate = Math.round((wins/(wins+losses)*100) * 10) / 10\n  return (winrate-50)*winPercentMMR\n  //(winrate - 50) * winPercentMMr\n}\n\nconst calculateMMR = (rank:string,tier:string,leaguePoints:number) => {\n  /**\n   * i 450 ~ 750\n   * b 800 ~ 1100\n   * s 1150 ~ 1450\n   * g 1500 ~ 1800\n   * p 1850 ~ 2150\n   * m 2200 ~ 2500\n   * gm 2550 ~ 3050\n   * c 3100 ~ +point\n   */\n  const convertTier = tierMMR[tier]\n  const convertRank = rankMMR[rank]\n  return convertTier + convertRank + leaguePoints\n}\n\nexport const calculate = (userInfo: MaterialMMR) => {\n  const convertWinRateMMR = winRateMMr(userInfo.wins,userInfo.losses)\n  \n  const convertTierMMR = calculateMMR(userInfo.rank,userInfo.tier,userInfo.leaguePoints)\n  return convertWinRateMMR + convertTierMMR\n}","import React from 'react';\nimport { UserInfo, MaterialMMR } from '../../types/type';\nimport { getUserInfo, getUserAccountId } from '../utils/getUserInfo';\nimport { calculate } from '../utils/calculate';\nimport styled from 'styled-components';\n\nconst InsertContainer = styled.div`\n  margin-bottom: 30px;\n`;\n\nconst Search = styled.input`\n  padding: 5px 80px 5px 20px;\n  border-radius: 25px;\n  outline: none;\n  border: none;\n  width: 450px;\n  height: 35px;\n`;\n\nconst SearchButton = styled.button`\n  margin-left: -70px;\n  outline: none;\n  border: none;\n  width: 50px;\n  height: 30px;\n  border-radius: 5px;\n  background-color: #BDBDC0;\n  color: #3E3F47;\n\n  &:hover {\n    background-color: #3E3F47;\n    color:  #BDBDC0;\n  }\n`;\n\nconst divUserId = (combinedID:string): string[] => {\n  const convertUserId = combinedID.replace(/님이 로비에 참가하셨습니다./gi,',');\n  // const regExp = /([a-z|A-z|0-9|ㄱ-ㅎ|ㅏ-ㅣ|가-힣]){1,}(님이 로비에 참가하셨습니다.)/g\n  // const divisionId = combinedID.match(regExp)\n\n  const divisionId = convertUserId.split(',');\n\n  const userIdGroup = divisionId?.map((element) => {\n    return element.trim()\n  })\n\n  console.log(userIdGroup);\n  if (divisionId === null) {\n    return [combinedID]\n  } else {\n    if (userIdGroup !== undefined) return userIdGroup;\n    return ['']\n  }\n}\n\n// default값 (underRank)는 실버 1 0포인트 승률: 50% 입니다.\nconst underRankMMR:MaterialMMR = {\n  tier: 'SILVER',\n  rank: 'I',\n  wins: 1,\n  losses: 1,\n  leaguePoints: 0,\n} \n\nconst underRankUserInfo: UserInfo = {\n  userId: '',\n  ...underRankMMR,\n  position: 'None',\n  team: 0,\n  mmr: calculate(underRankMMR)\n}\n\nconst getUserRankInfo = (userInfoList: UserInfo[]): UserInfo|undefined => {\n  \n  const userRankInfo = userInfoList.map((el:any):UserInfo|undefined => {\n    \n    if (el.queueType === \"RANKED_SOLO_5x5\") {\n      const { tier,rank,wins,losses,leaguePoints } = el\n      const materialMMR:MaterialMMR = {\n        tier,rank,wins,losses,leaguePoints\n      } \n      \n      return {\n        userId: '',\n        tier,\n        rank,\n        wins,\n        losses,\n        leaguePoints,\n        team: 0,\n        mmr: calculate(materialMMR)\n      }\n    }\n    return undefined\n\n  }).filter((el) => {\n    if (el) {\n      return true\n    }\n    return false\n  })\n  return userRankInfo[0]\n}\n\nconst getUserInfoList = async (idState:string,userInfoList:UserInfo[]):Promise<any> => {\n\n  const fetchUserInfoList = await Promise.all(divUserId(idState).map(async(element) => {\n    if (element === '') {\n      return\n    }\n    try{\n      const {id,name} =  await getUserAccountId(element)\n\n      const userInfo = await getUserInfo(id)\n\n      const userRankInfo = {\n        ...underRankUserInfo,\n        ...getUserRankInfo(userInfo),\n        userId: name\n      }\n      \n\n      // 중복검사\n      const confirmUserID = userInfoList.filter((element) => {\n        if (element.userId === name) return true\n        return false\n      })\n\n      if (confirmUserID.length === 0) {\n        \n        return ({\n          ...userRankInfo\n        })\n      }\n      \n    } catch(err) {\n      switch (err.message) {\n        case 'Not Exist UserID':\n          alert(`${element}는 찾을 수 없는 아이디입니다.`)\n          break\n        case 'Not Exist UserInfo':\n          alert(`${element}의 랭크정보를 불러올 수 없습니다.`)\n          break\n        default:\n          alert(`${err.message} 알 수 없는 에러`)\n      }\n    }\n  }))\n\n  const filtUndefinedData = fetchUserInfoList.filter((el) => {\n    if (el) return true\n\n    return false\n  })\n  return filtUndefinedData\n}\n\ninterface Props {\n  userInfoList:UserInfo[],\n  setUserInfoList:React.Dispatch<React.SetStateAction<UserInfo[]>>,\n}\n\nconst InsertUser = (props: Props) => {\n  const {userInfoList, setUserInfoList} = props\n  const [idState, setIdState] = React.useState<string>('');\n\n  const addId = async (e:React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    \n    const response = await  getUserInfoList(idState,userInfoList)\n    \n    setUserInfoList([\n      ...response,\n      ...userInfoList,\n    ])\n  };\n\n  return(\n    <InsertContainer>\n      <Search placeholder='Name1, Name2, ...' type=\"text\" onChange={(e) => {setIdState(e.target.value)}} />\n      <SearchButton onClick={addId}>{`검색`}</SearchButton>\n    </InsertContainer>\n  );\n}\nexport default InsertUser;","import { UserInfo } from \"../../types/type\"\n\ntype DivedTeam = {\n    redTeam: UserInfo[],\n    blueTeam: UserInfo[]\n}\n\ninterface UserInfoIDX extends UserInfo {\n    idx:number\n}\n\nconst makeBitMaskDivision = (userInfoList: UserInfoIDX[], teamBitMask:number): boolean => {\n    const userNoTeam = userInfoList.filter((el) => {\n        if (el.team === 0) {\n            return true\n        }\n        return false\n    }).sort((a,b) => {\n        return b.mmr - a.mmr\n    })\n\n    const userOneTeam = userInfoList.filter((el) => {\n        if (el.team === 1) {\n            return true\n        }\n        return false\n    }).sort((a,b) => {\n        return b.mmr - a.mmr\n    })\n\n    const userTwoTeam = userInfoList.filter((el) => {\n        if (el.team === 2) {\n            return true\n        }\n        return false\n    }).sort((a,b) => {\n        return b.mmr - a.mmr\n    })\n\n    let allUser = []\n    if (userTwoTeam[0]) {\n        allUser.push(userTwoTeam[0])\n    }\n    if (userOneTeam[0]) {\n        allUser.push(userOneTeam[0])\n    }\n    if (userNoTeam[0]) {\n        allUser.push( ...userNoTeam )\n    }\n\n    if (allUser.length < 2) {\n        return true\n    } else {\n        let splitedIdx = allUser.splice(0,2)\n        const one = splitedIdx[0].idx\n        const two = splitedIdx[1].idx\n        \n        const compareOne = teamBitMask & (1<<one)\n        const compareTwo = teamBitMask & (1<<two)\n\n        if (compareOne && compareTwo) {\n            return false\n        }\n        if (compareOne === 0 && compareTwo === 0) {\n            return false\n        }\n        return true\n    }\n}\n\nconst divisionPosition = (userInfoList:UserInfo[], teamBitMask:number) => {\n    const userInfoListWithIdx:UserInfoIDX[] = userInfoList.map((el,idx) => {\n        return {\n            idx:idx,\n            ...el,\n        }\n    })\n\n    const topUser = userInfoListWithIdx.filter((el) => {\n        if (el.position === 'Top') return true\n        return false\n    })\n\n    const jugUser = userInfoListWithIdx.filter((el) => {\n        if (el.position === 'Junggle') return true\n        return false\n    })\n\n    const midUser = userInfoListWithIdx.filter((el) => {\n        if (el.position === 'Mid') return true\n        return false\n    })\n\n    const adcUser = userInfoListWithIdx.filter((el) => {\n        if (el.position === 'ADC') return true\n        return false\n    })\n\n    const supUser = userInfoListWithIdx.filter((el) => {\n        if (el.position === 'Support') return true\n        return false\n    })\n\n    if (topUser.length >= 2) {\n        if (!makeBitMaskDivision(topUser,teamBitMask)) {\n            \n            return false\n        }\n    }\n    if (jugUser.length >= 2) {\n        if (!makeBitMaskDivision(jugUser,teamBitMask)) {\n            return false\n        }\n    }\n    if (midUser.length >= 2) {\n        if (!makeBitMaskDivision(midUser,teamBitMask)) {\n            return false\n        }\n    }\n    if (adcUser.length >= 2) {\n        if (!makeBitMaskDivision(adcUser,teamBitMask)) {\n            return false\n        }\n    }\n    if (supUser.length >= 2) {\n        if (!makeBitMaskDivision(supUser,teamBitMask)) {\n            return false\n        }\n    }\n    return true\n}\n\nconst checkSelectedTeam = (userListLength:number, i:number,teamOne:number,teamTwo:number) => {\n\n    const reverseI = (1<<userListLength)-1-i\n\n    if ((i&teamOne) === teamOne && (reverseI&teamTwo) === teamTwo) {\n        return false\n    }\n\n    if ((reverseI&teamOne) === teamOne && (i&teamTwo) === teamTwo) {\n        return false\n    }\n\n    return true\n}\n\nexport const divisionTeam= (userList: UserInfo[]): DivedTeam => {\n    let teamBitMask = -1\n    let diff = -1\n    const userListLength = userList.length\n\n    let teamOneBitMask = 0\n    let teamTwoBitMask = 0\n    for (let i = 0 ; i < userListLength; i++) {\n        if (userList[i].team === 1) {\n            teamOneBitMask |= (1 << i)\n        } else if (userList[i].team === 2) {\n            teamTwoBitMask |= (1 << i)\n        }\n    }\n\n    console.log('team >>>', teamOneBitMask,teamTwoBitMask)\n\n    for (let i = 0; i < (1<<userList.length); i++) {\n\n        let teamOneMMR = 0\n        let teamTwoMMR = 0\n        let count = 0\n\n        for (let k = 0; k < userList.length; k++) {\n            if (((1 << k) & i )) {\n                count += 1\n                teamOneMMR += userList[k].mmr\n            } else {\n                teamTwoMMR += userList[k].mmr\n            }\n        }\n\n        if (userList.length/2 !== count) {\n            continue\n        }\n\n        if (!divisionPosition(userList,i)) continue\n\n        if (checkSelectedTeam(userListLength,i,teamOneBitMask,teamTwoBitMask)) continue\n\n        const teamDiff = teamOneMMR-teamTwoMMR\n        \n        if (diff === -1 || Math.abs(diff) > Math.abs(teamDiff)) {\n            console.log(i)\n            diff = teamDiff\n            teamBitMask = i\n        }\n    }\n    \n    const teamOne = userList.filter((element,index) => {\n        if (teamBitMask & (1<<index)) {\n            return true\n        } else {\n            return false\n        }\n    })\n    const teamTwo = userList.filter((element,index) => {\n        if (teamBitMask & (1<<index)) {\n            return false\n        } else {\n            return true\n        }\n    })\n\n    if (diff >= 0) {\n        return {\n            redTeam: teamOne,\n            blueTeam: teamTwo,\n        }\n    } else {\n        return {\n            redTeam: teamTwo,\n            blueTeam: teamOne,\n        }\n    }\n}\n","export const  colors = {\n    background : `#0f1521`,\n    line : `#464b56`,\n    box : `#1a1f2d`,\n    innerBox: '#272a38',\n    fontColor: '#cecfc0',\n    nonTeam: '#5e6eb1',\n    oneTeam: '#c15874',\n    twoTeam: '#2d7f34',\n    white: '#fefeff',\n}","import React from 'react';\nimport { UserInfo } from '../../types/type';\nimport { divisionTeam } from '../utils/division';\nimport styled, { css } from 'styled-components';\nimport { colors } from '../assets/color';\n\ninterface TeamNameProps {\n  teamColor: 'red'|'blue';\n}\n\nconst DivTeamContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst PrintTeam = styled.div`\n  position: relative;\n  width: 40%;\n  min-height: 100px;\n  margin: 10px;\n  border: 1px solid ${colors.line};\n  border-radius: 10px;\n  background-color: ${colors.box};\n`;\n\nconst TeamName = styled.h4`\n  position: absolute;\n  top: -30px;\n\n  ${({teamColor}:TeamNameProps) => {\n    if (teamColor === 'red') {\n      return css`\n        background-color: red;\n    `;\n    }\n    \n\n    else if (teamColor === 'blue') {\n      return css`\n        background-color: blue;\n      `\n    }\n  }}\n`;\n\nconst NotDivTeam = styled.p`\n  font-siez: 2rem;\n  color: ${colors.fontColor};\n  font-weight: bold;\n`;\n\nconst PrintUserID = styled.p`\n    font-size: 1rem;\n    color: ${colors.fontColor};\n    font-weight: bold;\n`;\n\ninterface Props {\n  userInfoList: UserInfo[]\n}\n\nconst DivTeam = (props: Props) => {\n  const {redTeam, blueTeam} = divisionTeam(props.userInfoList)\n  console.log(redTeam, blueTeam)\n  return (\n    <>\n      {(redTeam.length === 0 || blueTeam.length === 0) ?\n        <NotDivTeam>{'팀을 나눌 수 없습니다.'}</NotDivTeam>\n        :\n        <DivTeamContainer>\n          <PrintTeam>\n            <TeamName teamColor='red'>{'레드팀'}</TeamName>\n            {redTeam.map((el,idx) => {\n              return (\n                <PrintUserID key={idx}>{el.userId}</PrintUserID>\n              )\n            })}\n          </PrintTeam>\n          <PrintTeam>\n            <TeamName teamColor='blue'>{'블루팀'}</TeamName>\n            {blueTeam.map((el,idx) => {\n              return (\n                <PrintUserID key={idx}>{el.userId}</PrintUserID>\n              )\n            })}\n          </PrintTeam>\n        </DivTeamContainer>\n      }\n    </>\n  );\n}\n\nexport default DivTeam","import { UserInfo } from '../../types/type';\n\n// 한팀에 중복된 라인\nexport const overlapPosition = (userInfoList:UserInfo[]):boolean => {\n\n    const teamOne = userInfoList.filter((el) => {\n        if (el.team === 1 && el.position !== 'None') {\n            return true\n        }\n        return false\n    }).map((el) => {\n        return el.position\n    })\n\n    const setTeamOne = new Set(teamOne)\n    if (teamOne.length !== setTeamOne.size) {\n        return false\n    }\n\n    const teamTwo =  userInfoList.filter((el) => {\n        if (el.team === 2 && el.position !== 'None') {\n            return true\n        }\n        return false\n    }).map((el) => {\n        return el.position\n    })\n    \n    const setTeamTwo = new Set(teamTwo)\n    if (teamTwo.length !== setTeamTwo.size ) {\n        return false\n    }\n\n    return true\n}\n// team인원 초과\nexport const excessPersonnel = (userInfoList:UserInfo[]):boolean => {\n    const teamOne = userInfoList.filter((el) => {\n        if (el.team === 1) {\n            return true\n        }\n        return false\n    })\n    \n    if (teamOne.length > userInfoList.length/2) {\n        return false\n    }\n\n    const teamTwo =  userInfoList.filter((el) => {\n        if (el.team === 2) {\n            return true\n        }\n        return false\n    })\n\n    if (teamTwo.length > userInfoList.length/2) {\n        return false\n    }\n\n    return true\n}\n\nexport const checkValidTeam = (userInfoList:UserInfo[]) => {\n    if (! overlapPosition(userInfoList)) {\n        throw new Error('overlapPosition')\n    }\n    if (! excessPersonnel(userInfoList)) {\n        throw new Error('excessPersonnel')\n    }\n}","import React from 'react';\nimport { UserInfo } from '../../types/type';\nimport styled from 'styled-components';\nimport { colors } from '../assets/color';\n\nconst DeleteButton = styled.button`\n    background-color: ${colors.innerBox};\n    outline: none;\n    border: none;\n    cursor: pointer;\n\n    &:hover {\n        color: ${colors.fontColor}\n    }\n`;\n\ninterface Props {\n    userInfoList:UserInfo[],\n    setUserInfoList:React.Dispatch<React.SetStateAction<UserInfo[]>>,\n    userIndex: number;\n  }\n\nconst DeleteUser = (props: Props) => {\n    const deleteUserInfo = (e:React.MouseEvent<HTMLButtonElement>) => {\n        const filterUser = props.userInfoList.filter((element,index) => {\n            if (index === props.userIndex) {\n                return false\n            }\n            return true\n        })\n\n        props.setUserInfoList(filterUser);\n    }\n    return (\n        <DeleteButton onClick={deleteUserInfo}>{'X'}</DeleteButton>\n    );\n}\n\nexport default DeleteUser;","import React from 'react';\nimport { DragDropContext, Droppable, Draggable, DropResult } from 'react-beautiful-dnd';\nimport styled, { css } from 'styled-components';\nimport { UserInfo, Position } from '../../types/type';\nimport { overlapPosition,  excessPersonnel } from '../utils/checkValidTeam';\nimport { colors } from '../assets/color';\nimport DeleteUser from './DeleteUser';\n\ninterface TeamTagProps {\n    teamNumber: number;\n}\n\nconst DragNDropStyle = styled.div`\n    margin-top: 10px;\n    display: flex;\n    justify-content: space-around;\n`;\n\nconst DropStyle = styled.div`\n    position: relative;\n    width: 250px;\n    padding: 30px;\n    border: 1px solid ${colors.line};\n    background-color: ${colors.box};\n    border-radius: 5px;\n`;\n\nconst TeamTag = styled.p`\n    position: absolute;\n    top: -10px;\n\n    ${({teamNumber}:TeamTagProps) => {\n        if (teamNumber === 0) {\n            return css`\n                color: ${colors.nonTeam};\n            `;\n        }\n        \n    \n        else if (teamNumber === 1) {\n            return css`\n                color: ${colors.oneTeam};\n            `;\n        }\n\n        else if (teamNumber === 2) {\n            return css`\n                color: ${colors.twoTeam};\n            `;\n        }\n    }}\n`;\n\nconst PrintUserInfo = styled.div`\n    padding: 0 5px 0 5px;\n    border: none;\n    border-radius: 5px;\n    background-color: ${colors.innerBox};\n    margin-bottom: 5px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    &:last-child {\n        margin-bottom: 0;\n    }\n`;\n\nconst SelectUserPosition = styled.select`\n    border: none;\n    outline: none;\n    border-radius: 5px;\n    background-color: ${colors.innerBox};\n    color: ${colors.white};\n`;\n\nconst PrintUserID = styled.p`\n    font-size: 1rem;\n    color: ${colors.fontColor};\n    font-weight: bold;\n`;\n\ninterface Props {\n    userInfoList: UserInfo[]\n    setUserInfoList: React.Dispatch<React.SetStateAction<UserInfo[]>>\n}\n\nconst DragNDrop = ({userInfoList, setUserInfoList}: Props) => {\n    const positionChange = (e:React.ChangeEvent<HTMLSelectElement>) => {\n        const position = e.target.value as Position\n        \n        const changeUserPosition = userInfoList.map((element) => {\n            if (element.userId === e.target.name) {\n                return {\n                    ...element,\n                    position: position\n                }\n                } else {\n                return {\n                    ...element\n                }\n            }\n        })\n\n        if (!overlapPosition(changeUserPosition)) {\n            alert('한 팀에 중복된 포지션이 있습니다.')\n        }\n\n        setUserInfoList(changeUserPosition)\n    }\n\n    const onDragEnd = (result:DropResult) => {\n        const { draggableId, destination } = result;\n\n        const movedTeam = destination ?  destination.droppableId : '0';\n\n        const moveUserInfo = userInfoList.map((el) => {\n            if (el.userId === draggableId) {\n                return {\n                    ...el,\n                    team: parseInt(movedTeam)\n                }\n            } else {\n                return {\n                    ...el\n                }\n            }\n        })\n\n        if (!excessPersonnel(moveUserInfo)) {\n            alert('한 팀에 너무 많은 인원이 있습니다.')\n        }\n\n        setUserInfoList(moveUserInfo)\n    }\n\n    return (\n        <DragNDropStyle>\n            <DragDropContext onDragEnd={onDragEnd}>\n                <Droppable droppableId='0'>\n                    {(provided) => (\n                        <DropStyle\n                            {...provided.droppableProps}\n                            ref={provided.innerRef}\n                        >\n                            <TeamTag teamNumber={0}>{'상관없음'}</TeamTag>\n                            {userInfoList.filter((el) => {\n                                if (el.team === 0) return true\n                                return false\n                            }).map((element,index) => {\n                                return (\n                                    <Draggable index={index} key={element.userId} draggableId={element.userId}>\n                                        {(provided) => \n                                        <PrintUserInfo\n                                            ref={provided.innerRef}\n                                            {...provided.dragHandleProps}\n                                            {...provided.draggableProps}\n                                        >\n                                            <PrintUserID>\n                                                {element.userId}\n                                            </PrintUserID>\n                                            <div>\n                                                <SelectUserPosition value={element.position} name={element.userId} onChange={positionChange}>\n                                                    <option value=\"None\">{`없음`}</option>\n                                                    <option value=\"Top\">{`탑`}</option>\n                                                    <option value=\"Junggle\">{`정글`}</option>\n                                                    <option value=\"Mid\">{`미드`}</option>\n                                                    <option value=\"ADC\">{`원딜`}</option>\n                                                    <option value=\"Support\">{`서폿`}</option>\n                                                </SelectUserPosition>\n                                                <DeleteUser userInfoList={userInfoList} setUserInfoList={setUserInfoList} userIndex={index} />   \n                                            </div>\n                                        </PrintUserInfo>\n                                        }\n                                    </Draggable>\n                                );\n                            })}\n                        </DropStyle>\n                    )}\n                </Droppable>\n                <Droppable droppableId='1'>\n                    {(provided) => (\n                        <DropStyle\n                        {...provided.droppableProps}\n                        ref={provided.innerRef}\n                    >\n                        <TeamTag teamNumber={1}>{'1팀'}</TeamTag>\n                        {userInfoList.filter((el) => {\n                            if (el.team === 1) return true\n                            return false\n                        }).map((element,index) => {\n                            return (\n                                <Draggable index={index} key={element.userId} draggableId={element.userId}>\n                                    {(provided) => \n                                        <PrintUserInfo\n                                        ref={provided.innerRef}\n                                        {...provided.dragHandleProps}\n                                        {...provided.draggableProps}\n                                    >\n                                        <PrintUserID>\n                                            {element.userId}\n                                        </PrintUserID>\n                                        <div>\n                                                <SelectUserPosition value={element.position} name={element.userId} onChange={positionChange}>\n                                                    <option value=\"None\">{`없음`}</option>\n                                                    <option value=\"Top\">{`탑`}</option>\n                                                    <option value=\"Junggle\">{`정글`}</option>\n                                                    <option value=\"Mid\">{`미드`}</option>\n                                                    <option value=\"ADC\">{`원딜`}</option>\n                                                    <option value=\"Support\">{`서폿`}</option>\n                                                </SelectUserPosition>\n                                                <DeleteUser userInfoList={userInfoList} setUserInfoList={setUserInfoList} userIndex={index} />   \n                                            </div>\n                                    </PrintUserInfo>\n                                    }\n                                </Draggable>\n                            );\n                        })}\n                        {provided.placeholder}\n                    </DropStyle>\n                    )}\n                </Droppable>\n                <Droppable droppableId='2'>\n                    {(provided) => (\n                        <DropStyle\n                        {...provided.droppableProps}\n                        ref={provided.innerRef}\n                    >\n                        <TeamTag teamNumber={2}>{'2팀'}</TeamTag>\n                        {userInfoList.filter((el) => {\n                            if (el.team === 2) return true\n                            return false\n                        }).map((element,index) => {\n                            return (\n                                <Draggable index={index} key={element.userId} draggableId={element.userId}>\n                                    {(provided) => \n                                        <PrintUserInfo\n                                        ref={provided.innerRef}\n                                        {...provided.dragHandleProps}\n                                        {...provided.draggableProps}\n                                    >\n                                        <PrintUserID>\n                                            {element.userId}\n                                        </PrintUserID>\n                                        <div>\n                                                <SelectUserPosition value={element.position} name={element.userId} onChange={positionChange}>\n                                                    <option value=\"None\">{`없음`}</option>\n                                                    <option value=\"Top\">{`탑`}</option>\n                                                    <option value=\"Junggle\">{`정글`}</option>\n                                                    <option value=\"Mid\">{`미드`}</option>\n                                                    <option value=\"ADC\">{`원딜`}</option>\n                                                    <option value=\"Support\">{`서폿`}</option>\n                                                </SelectUserPosition>\n                                                <DeleteUser userInfoList={userInfoList} setUserInfoList={setUserInfoList} userIndex={index} />   \n                                            </div>\n                                    </PrintUserInfo>\n                                    }\n                                </Draggable>\n                            );\n                        })}\n                        {provided.placeholder}\n                    </DropStyle>\n                    )}\n                </Droppable>\n            </DragDropContext>\n        </DragNDropStyle>\n    );\n}\n\nexport default DragNDrop","import React from 'react';\n\nconst Adsense = () => {\n    return (\n        <>\n        </>\n    );\n}\n\nexport default Adsense;","import React from 'react';\nimport styled from 'styled-components';\nimport { colors } from '../../assets/color';\n\nconst ContentText = styled.p`\n    color: ${colors.fontColor};\n`;\n\nconst MenualContent = () => {\n    return (\n        <>\n            <ContentText>\n                {'Lol Team은 4인 6인 8인 10인의 롤플레이어들을 비슷한 MMR의 두 팀으로 나눠주는 프로그램입니다.'}\n            </ContentText>\n            <ContentText>\n                {'멀티서치 가능합니다.'}\n            </ContentText>\n            <ContentText>\n                {'유저 카드를 드래그해서 1팀 또는 2팀으로 이동할 수 있습니다.'}\n            </ContentText>\n            <ContentText>\n                {'꼭 같은 팀이어야 하는 유저들을 1팀 또는 2팀으로 이동시켜 팀을 나눌 수 있습니다.'}\n            </ContentText>\n            <ContentText>\n                {'자신있는 라인을 선택해 팀을 나눌 수 있습니다. 만약 같은 라인에 3명 이상의 유저가 지정되어있다면 MMR이 높은 유저 두명을 기준으로 팀이 나눠집니다.'}\n            </ContentText>\n            <ContentText>\n                {'솔로 랭크 기준으로 MMR을 계산했으면 계산법은 아래 링크에서 확인하실 수 있습니다.'}\n            </ContentText>\n            <ContentText>\n                {'만약 언랭 유저인 경우 실버2 0포인트로 생각하여 MMR을 계산합니다.'}\n            </ContentText>\n            <ContentText>\n                {'나눠진 두 팀의 MMR은 거의 비슷하며 MMR이 높은 팀은 레드팀으로 배정됩니다.'}\n            </ContentText>\n        </>\n    );\n}\n\nexport default MenualContent;","import React from 'react';\nimport styled from 'styled-components';\nimport { colors } from '../../assets/color';\nimport MenualContent from './MenualContent';\n\nconst Background = styled.div`\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.8);\n    position: fixed;\n    display: flex;\n    justify-content: center;\n    z-index: 1;\n`;\n\nconst ModalWrapper = styled.div`\n    width: 67%;\n    height: 70%;\n    padding: 10px;\n    border: 1px solid ${colors.white};\n    background-color: ${colors.innerBox};\n    border-radius: 15px;\n    text-align: left;\n    overflow: auto;\n`;\n\ninterface Props {\n    showModal: boolean;\n    setShowModal: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst MenualModal = ({ showModal, setShowModal }: Props) => {\n    return (\n        <>\n            {showModal ? \n                <Background>\n                    <ModalWrapper>\n                        <MenualContent/>\n                    </ModalWrapper>\n                </Background>\n            : null}\n        </>\n    );\n}\n\nexport default MenualModal;","import React from 'react';\nimport MenualModal from './MenualModal';\nimport styled from 'styled-components';\nimport { colors } from '../../assets/color';\n\nconst MenualText = styled.p`\n    font-size: 13px;\n    color: ${colors.fontColor};\n    cursor: pointer;\n`;\n\nconst Menual = () => {\n    const [showModal, setShowModal] = React.useState(false);\n\n    const openModal = (e:React.MouseEvent) => {\n        setShowModal(!showModal)\n    }\n\n    return (\n        <>\n            <MenualText onClick={openModal}>{showModal ? '닫기' : '사용방법'}</MenualText>\n            <MenualModal showModal={showModal} setShowModal={setShowModal}/>\n        </>\n    );\n}\n\nexport default Menual;","import React from 'react';\nimport InsertUser from './components/InsertUser';\nimport DivTeam from './components/DivTeam'\nimport { UserInfo } from '../types/type'\nimport styled from 'styled-components';\nimport DragNDrop from './components/DragNDrop';\nimport { colors } from './assets/color';\nimport Adsense from './components/Adsense';\nimport Menual from './components/menual/Menual';\n\nconst SelectOptionUser = styled.div`\n  min-width: 900px;\n  text-align: center;\n  margin-top: 3rem;\n`;\n\nconst DivTeamButton = styled.button`\n  margin-top: 10px;\n  width: 120px;\n  height: 50px;\n  border: 0px;\n  font-size: 18px;\n  border-radius: 5px;\n  background-color: ${colors.innerBox};\n  color: ${colors.fontColor};\n\n  &:hover {\n    background-color: ${colors.background};\n    color:  #BDBDC0;\n    cursor: pointer;\n  }\n`;\n\nfunction App() {\n  const [userInfoList, setUserInfoList] = React.useState<UserInfo[]>([]);\n  const [runDivTeam, setRunDivTeam] = React.useState<boolean>(false);\n\n  const userLang = navigator.language;\n\n  console.log(userLang);\n\n  const clickDivTeam = (e: React.MouseEvent<HTMLButtonElement>) => {\n    if (userInfoList.length%2 !== 0) {\n      alert('인원을 짝수로 맞춰주세요')\n    } else {\n      setRunDivTeam(true)\n    }\n  }\n\n  const clickSearchTeam = (e: React.MouseEvent<HTMLButtonElement>) => {\n    setRunDivTeam(false)\n  }\n  \n  React.useEffect(() => {\n    console.log(userInfoList)\n  },[userInfoList])\n\n  return (\n    <SelectOptionUser>\n      {runDivTeam === false ?\n        <>\n          <div>\n            <Menual/>\n            <InsertUser userInfoList={userInfoList} setUserInfoList={setUserInfoList}/>\n          </div>\n          <DragNDrop userInfoList={userInfoList} setUserInfoList={setUserInfoList}/>\n          <DivTeamButton onClick={clickDivTeam}>{'팀 나누기'}</DivTeamButton>\n        </>\n      :\n      <div>\n        <DivTeam userInfoList={userInfoList} />\n        <DivTeamButton onClick={clickSearchTeam}>{'인원 수정'}</DivTeamButton>\n      </div>\n      }\n      <Adsense />\n    </SelectOptionUser>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}