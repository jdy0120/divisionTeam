{"version":3,"sources":["assets/config.ts","utils/getUserInfo.ts","assets/gameEnv.ts","utils/calculate.ts","components/InsertUser.tsx","utils/division.ts","style/color.ts","components/DivTeam.tsx","utils/checkValidTeam.ts","components/DeleteUser.tsx","components/DragNDrop.tsx","components/Adsense.tsx","img/multiSearch1.png","img/dragNdrop2.png","img/fixUserTeam.png","img/fixUserTeam2.png","components/menual/MenualContent.tsx","components/menual/MenualModal.tsx","components/menual/Menual.tsx","App.tsx","style/theme.ts","index.tsx"],"names":["serverUrl","getUserAccountId","userId","a","axios","get","response","data","userAccountId","Error","getUserInfo","id","userInfo","tierMMR","IRON","BRONZE","SILVER","GOLD","PLATINUM","DIAMOND","MASTER","GRANDMASTER","CHALLENGER","rankMMR","IV","III","II","I","calculate","wins","losses","rank","tier","leaguePoints","Math","round","InsertContainer","styled","div","Search","input","props","theme","mobile","SearchButton","button","divUserId","combinedID","divisionId","replace","split","userIdGroup","map","element","trim","console","log","undefined","underRankMMR","underRankUserInfo","position","team","mmr","getUserRankInfo","userInfoList","el","queueType","filter","getUserInfoList","idState","Promise","all","name","userRankInfo","length","message","alert","fetchUserInfoList","filtUndefinedData","InsertUser","setUserInfoList","React","useState","setIdState","addId","e","placeholder","type","onChange","target","value","onClick","makeBitMaskDivision","teamBitMask","userNoTeam","sort","b","userOneTeam","userTwoTeam","allUser","push","splitedIdx","splice","compareOne","idx","compareTwo","divisionPosition","userInfoListWithIdx","topUser","jugUser","midUser","adcUser","supUser","checkSelectedTeam","userListLength","i","teamOne","teamTwo","reverseI","colors","DivTeamContainer","PrintTeam","TeamName","h4","teamColor","css","NotDivTeam","p","PrintUserID","DivTeam","userList","diff","teamOneBitMask","teamTwoBitMask","teamOneMMR","teamTwoMMR","count","k","teamDiff","abs","index","redTeam","blueTeam","divisionTeam","overlapPosition","setTeamOne","Set","size","setTeamTwo","excessPersonnel","DeleteButton","DeleteUser","filterUser","userIndex","DragNDropStyle","DropStyle","TeamTag","teamNumber","PrintUserInfo","SelectUserPosition","select","DragNDrop","positionChange","changeUserPosition","onDragEnd","result","draggableId","destination","movedTeam","droppableId","moveUserInfo","parseInt","provided","droppableProps","ref","innerRef","dragHandleProps","draggableProps","Adsense","ContentText","ContentImg","img","MenualContent","src","multiSearch1","dragNdrop2","fixUserTeam","fixUserTeam2","Background","ModalWrapper","MenualModal","showModal","setShowModal","MenualText","Menual","setShowQuestion","SelectOptionUser","laptop","DivTeamButton","App","runDivTeam","setRunDivTeam","userLang","navigator","language","useEffect","tabletS","tabletM","tabletL","desktop","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec3aa1cc.chunk.js","sourcesContent":["export const serverUrl = 'https://us-central1-seismic-sweep-318403.cloudfunctions.net';","import axios from 'axios'\nimport { serverUrl } from '../assets/config'\n\nexport const getUserAccountId = async (userId:string): Promise<any>=> {\n    try {\n        // const response = await axios.get(`http://localhost:5000/seismic-sweep-318403/us-central1/getUserInfo/fetchUserAccountId?userId=${userId}`);\n        const response = await axios.get(`${serverUrl}/getUserInfo/fetchUserAccountId?userId=${userId}`);\n        return response.data.userAccountId\n    } catch (err) {\n        throw new Error(err.response.data);\n    }\n}\n\nexport const getUserInfo = async (id:string): Promise<any> => {\n    try {\n        // const response = await axios.get(`http://localhost:5000/seismic-sweep-318403/us-central1/getUserInfo/fetchUserInfo?id=${id}`,)\n        const response = await axios.get(`${serverUrl}/getUserInfo/fetchUserInfo?id=${id}`,)\n        return response.data.userInfo\n    } catch (err) {\n        throw new Error(err.response.data);\n    }\n}","/**\n   * i 450 ~ 750\n   * b 800 ~ 1100\n   * s 1150 ~ 1450\n   * g 1500 ~ 1800\n   * p 1850 ~ 2150\n   * d 2200 ~ 2500\n   * m 2550 ~ 3050\n   * gm 3100 + point\n   */\ntype TierMMR = {\n  [k in string]: number\n}\n\nexport const tierMMR:TierMMR = {\n  IRON: 450,\n  BRONZE:800,\n  SILVER:1150,\n  GOLD:1500,\n  PLATINUM:1850,\n  DIAMOND:2200,\n  // 마스터티어부터 모두 'I'티어이기 때문에 300점을 깍아줬다 calculate에서 300을 더하기 때문\n  MASTER:2250,\n  GRANDMASTER:2250,\n  CHALLENGER:2250,\n}\n\ntype RankMMR = {\n  [k in string]:number\n}\n\nexport const rankMMR:RankMMR = {\n  IV: 0,\n  III: 100,\n  II: 200,\n  I: 300,\n}\n\nexport const winPercentMMR = 10","import { MaterialMMR } from '../../types/type';\nimport { rankMMR, tierMMR, winPercentMMR } from '../assets/gameEnv';\n\nconst winRateMMr = (wins:number,losses:number):number => {\n  const winrate = Math.round((wins/(wins+losses)*100) * 10) / 10\n  return (winrate-50)*winPercentMMR\n  //(winrate - 50) * winPercentMMr\n}\n\nconst calculateMMR = (rank:string,tier:string,leaguePoints:number) => {\n  /**\n   * i 450 ~ 750\n   * b 800 ~ 1100\n   * s 1150 ~ 1450\n   * g 1500 ~ 1800\n   * p 1850 ~ 2150\n   * m 2200 ~ 2500\n   * gm 2550 ~ 3050\n   * c 3100 ~ +point\n   */\n  const convertTier = tierMMR[tier]\n  const convertRank = rankMMR[rank]\n  return convertTier + convertRank + leaguePoints\n}\n\nexport const calculate = (userInfo: MaterialMMR) => {\n  const convertWinRateMMR = winRateMMr(userInfo.wins,userInfo.losses)\n  \n  const convertTierMMR = calculateMMR(userInfo.rank,userInfo.tier,userInfo.leaguePoints)\n  return convertWinRateMMR + convertTierMMR\n}","import React from 'react';\nimport { UserInfo, MaterialMMR } from '../../types/type';\nimport { getUserInfo, getUserAccountId } from '../utils/getUserInfo';\nimport { calculate } from '../utils/calculate';\nimport styled from 'styled-components';\n\nconst InsertContainer = styled.div`\n  margin-bottom: 30px;\n`;\n\nconst Search = styled.input`\n  padding: 5px 80px 5px 20px;\n  border-radius: 25px;\n  outline: none;\n  border: none;\n  width: 450px;\n  height: 35px;\n\n  @media ${(props) => props.theme.mobile} {\n    width: auto;\n  }\n`;\n\nconst SearchButton = styled.button`\n  margin-left: -70px;\n  outline: none;\n  border: none;\n  width: 50px;\n  height: 30px;\n  border-radius: 5px;\n  background-color: #BDBDC0;\n  color: #3E3F47;\n\n  &:hover {\n    background-color: #3E3F47;\n    color:  #BDBDC0;\n  }\n`;\n\nconst divUserId = (combinedID:string): string[] => {\n  const convertUserId = combinedID.replace(/님이 로비에 참가하셨습니다./gi,',');\n  // const regExp = /([a-z|A-z|0-9|ㄱ-ㅎ|ㅏ-ㅣ|가-힣]){1,}(님이 로비에 참가하셨습니다.)/g\n  // const divisionId = combinedID.match(regExp)\n\n  const divisionId = convertUserId.split(',');\n\n  const userIdGroup = divisionId?.map((element) => {\n    return element.trim()\n  })\n\n  console.log(userIdGroup);\n  if (divisionId === null) {\n    return [combinedID]\n  } else {\n    if (userIdGroup !== undefined) return userIdGroup;\n    return ['']\n  }\n}\n\n// default값 (underRank)는 실버 1 0포인트 승률: 50% 입니다.\nconst underRankMMR:MaterialMMR = {\n  tier: 'SILVER',\n  rank: 'I',\n  wins: 1,\n  losses: 1,\n  leaguePoints: 0,\n} \n\nconst underRankUserInfo: UserInfo = {\n  userId: '',\n  ...underRankMMR,\n  position: 'None',\n  team: 0,\n  mmr: calculate(underRankMMR)\n}\n\nconst getUserRankInfo = (userInfoList: UserInfo[]): UserInfo|undefined => {\n  \n  const userRankInfo = userInfoList.map((el:any):UserInfo|undefined => {\n    \n    if (el.queueType === \"RANKED_SOLO_5x5\") {\n      const { tier,rank,wins,losses,leaguePoints } = el\n      const materialMMR:MaterialMMR = {\n        tier,rank,wins,losses,leaguePoints\n      } \n      \n      return {\n        userId: '',\n        tier,\n        rank,\n        wins,\n        losses,\n        leaguePoints,\n        team: 0,\n        mmr: calculate(materialMMR)\n      }\n    }\n    return undefined\n\n  }).filter((el) => {\n    if (el) {\n      return true\n    }\n    return false\n  })\n  return userRankInfo[0]\n}\n\nconst getUserInfoList = async (idState:string,userInfoList:UserInfo[]):Promise<any> => {\n\n  const fetchUserInfoList = await Promise.all(divUserId(idState).map(async(element) => {\n    if (element === '') {\n      return\n    }\n    try{\n      const {id,name} =  await getUserAccountId(element);\n\n      const userInfo = await getUserInfo(id)\n\n      const userRankInfo = {\n        ...underRankUserInfo,\n        ...getUserRankInfo(userInfo),\n        userId: name\n      }\n      \n\n      // 중복검사\n      const confirmUserID = userInfoList.filter((element) => {\n        if (element.userId === name) return true\n        return false\n      })\n\n      if (confirmUserID.length === 0) {\n        \n        return ({\n          ...userRankInfo\n        })\n      }\n      \n    } catch(err) {\n      switch (err.message) {\n        case 'Data not found - summoner not found':\n          alert(`${element}는 찾을 수 없는 아이디입니다.`)\n          break\n        case 'Bad Request - Exception decrypting undefined':\n          alert(`${element}의 랭크정보를 불러올 수 없습니다.`)\n          break\n        default:\n          alert(`${err.message} 알 수 없는 에러`)\n      }\n    }\n  }))\n\n  const filtUndefinedData = fetchUserInfoList.filter((el) => {\n    if (el) return true\n\n    return false\n  })\n  return filtUndefinedData\n}\n\ninterface Props {\n  userInfoList:UserInfo[],\n  setUserInfoList:React.Dispatch<React.SetStateAction<UserInfo[]>>,\n}\n\nconst InsertUser = (props: Props) => {\n  const {userInfoList, setUserInfoList} = props\n  const [idState, setIdState] = React.useState<string>('');\n\n  const addId = async (e:React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    \n    const response = await  getUserInfoList(idState,userInfoList)\n    \n    setUserInfoList([\n      ...response,\n      ...userInfoList,\n    ])\n  };\n\n  return(\n    <InsertContainer>\n      <Search placeholder='Name1, Name2, ...' type=\"text\" onChange={(e) => {setIdState(e.target.value)}} />\n      <SearchButton onClick={addId}>{`검색`}</SearchButton>\n    </InsertContainer>\n  );\n}\nexport default InsertUser;","import { UserInfo } from \"../../types/type\"\n\ntype DivedTeam = {\n    redTeam: UserInfo[],\n    blueTeam: UserInfo[]\n}\n\ninterface UserInfoIDX extends UserInfo {\n    idx:number\n}\n\nconst makeBitMaskDivision = (userInfoList: UserInfoIDX[], teamBitMask:number): boolean => {\n    const userNoTeam = userInfoList.filter((el) => {\n        if (el.team === 0) {\n            return true\n        }\n        return false\n    }).sort((a,b) => {\n        return b.mmr - a.mmr\n    })\n\n    const userOneTeam = userInfoList.filter((el) => {\n        if (el.team === 1) {\n            return true\n        }\n        return false\n    }).sort((a,b) => {\n        return b.mmr - a.mmr\n    })\n\n    const userTwoTeam = userInfoList.filter((el) => {\n        if (el.team === 2) {\n            return true\n        }\n        return false\n    }).sort((a,b) => {\n        return b.mmr - a.mmr\n    })\n\n    let allUser = []\n    if (userTwoTeam[0]) {\n        allUser.push(userTwoTeam[0])\n    }\n    if (userOneTeam[0]) {\n        allUser.push(userOneTeam[0])\n    }\n    if (userNoTeam[0]) {\n        allUser.push( ...userNoTeam )\n    }\n\n    if (allUser.length < 2) {\n        return true\n    } else {\n        let splitedIdx = allUser.splice(0,2)\n        const one = splitedIdx[0].idx\n        const two = splitedIdx[1].idx\n        \n        const compareOne = teamBitMask & (1<<one)\n        const compareTwo = teamBitMask & (1<<two)\n\n        if (compareOne && compareTwo) {\n            return false\n        }\n        if (compareOne === 0 && compareTwo === 0) {\n            return false\n        }\n        return true\n    }\n}\n\nconst divisionPosition = (userInfoList:UserInfo[], teamBitMask:number) => {\n    const userInfoListWithIdx:UserInfoIDX[] = userInfoList.map((el,idx) => {\n        return {\n            idx:idx,\n            ...el,\n        }\n    })\n\n    const topUser = userInfoListWithIdx.filter((el) => {\n        if (el.position === 'Top') return true\n        return false\n    })\n\n    const jugUser = userInfoListWithIdx.filter((el) => {\n        if (el.position === 'Junggle') return true\n        return false\n    })\n\n    const midUser = userInfoListWithIdx.filter((el) => {\n        if (el.position === 'Mid') return true\n        return false\n    })\n\n    const adcUser = userInfoListWithIdx.filter((el) => {\n        if (el.position === 'ADC') return true\n        return false\n    })\n\n    const supUser = userInfoListWithIdx.filter((el) => {\n        if (el.position === 'Support') return true\n        return false\n    })\n\n    if (topUser.length >= 2) {\n        if (!makeBitMaskDivision(topUser,teamBitMask)) {\n            \n            return false\n        }\n    }\n    if (jugUser.length >= 2) {\n        if (!makeBitMaskDivision(jugUser,teamBitMask)) {\n            return false\n        }\n    }\n    if (midUser.length >= 2) {\n        if (!makeBitMaskDivision(midUser,teamBitMask)) {\n            return false\n        }\n    }\n    if (adcUser.length >= 2) {\n        if (!makeBitMaskDivision(adcUser,teamBitMask)) {\n            return false\n        }\n    }\n    if (supUser.length >= 2) {\n        if (!makeBitMaskDivision(supUser,teamBitMask)) {\n            return false\n        }\n    }\n    return true\n}\n\nconst checkSelectedTeam = (userListLength:number, i:number,teamOne:number,teamTwo:number) => {\n\n    const reverseI = (1<<userListLength)-1-i\n\n    if ((i&teamOne) === teamOne && (reverseI&teamTwo) === teamTwo) {\n        return false\n    }\n\n    if ((reverseI&teamOne) === teamOne && (i&teamTwo) === teamTwo) {\n        return false\n    }\n\n    return true\n}\n\nexport const divisionTeam= (userList: UserInfo[]): DivedTeam => {\n    let teamBitMask = -1\n    let diff = -1\n    const userListLength = userList.length\n\n    let teamOneBitMask = 0\n    let teamTwoBitMask = 0\n    for (let i = 0 ; i < userListLength; i++) {\n        if (userList[i].team === 1) {\n            teamOneBitMask |= (1 << i)\n        } else if (userList[i].team === 2) {\n            teamTwoBitMask |= (1 << i)\n        }\n    }\n\n    console.log('team >>>', teamOneBitMask,teamTwoBitMask)\n\n    for (let i = 0; i < (1<<userList.length); i++) {\n\n        let teamOneMMR = 0\n        let teamTwoMMR = 0\n        let count = 0\n\n        for (let k = 0; k < userList.length; k++) {\n            if (((1 << k) & i )) {\n                count += 1\n                teamOneMMR += userList[k].mmr\n            } else {\n                teamTwoMMR += userList[k].mmr\n            }\n        }\n\n        if (userList.length/2 !== count) {\n            continue\n        }\n\n        if (!divisionPosition(userList,i)) continue\n\n        if (checkSelectedTeam(userListLength,i,teamOneBitMask,teamTwoBitMask)) continue\n\n        const teamDiff = teamOneMMR-teamTwoMMR\n        \n        if (diff === -1 || Math.abs(diff) > Math.abs(teamDiff)) {\n            diff = teamDiff\n            teamBitMask = i\n        }\n    }\n    \n    const teamOne = userList.filter((element,index) => {\n        if (teamBitMask & (1<<index)) {\n            return true\n        } else {\n            return false\n        }\n    })\n    const teamTwo = userList.filter((element,index) => {\n        if (teamBitMask & (1<<index)) {\n            return false\n        } else {\n            return true\n        }\n    })\n\n    if (diff >= 0) {\n        return {\n            redTeam: teamOne,\n            blueTeam: teamTwo,\n        }\n    } else {\n        return {\n            redTeam: teamTwo,\n            blueTeam: teamOne,\n        }\n    }\n}\n","export const  colors = {\n    background : `#0f1521`,\n    line : `#464b56`,\n    box : `#1a1f2d`,\n    innerBox: '#272a38',\n    fontColor: '#cecfc0',\n    nonTeam: '#5e6eb1',\n    oneTeam: '#c15874',\n    twoTeam: '#2d7f34',\n    white: '#fefeff',\n}","import React from 'react';\nimport { UserInfo } from '../../types/type';\nimport { divisionTeam } from '../utils/division';\nimport styled, { css } from 'styled-components';\nimport { colors } from '../style/color';\n\ninterface TeamNameProps {\n  teamColor: 'red'|'blue';\n}\n\nconst DivTeamContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst PrintTeam = styled.div`\n  position: relative;\n  width: 40%;\n  min-height: 100px;\n  margin: 10px;\n  border: 1px solid ${colors.line};\n  border-radius: 10px;\n  background-color: ${colors.box};\n`;\n\nconst TeamName = styled.h4`\n  position: absolute;\n  top: -30px;\n\n  ${({teamColor}:TeamNameProps) => {\n    if (teamColor === 'red') {\n      return css`\n        background-color: red;\n    `;\n    }\n    \n\n    else if (teamColor === 'blue') {\n      return css`\n        background-color: blue;\n      `\n    }\n  }}\n`;\n\nconst NotDivTeam = styled.p`\n  font-siez: 2rem;\n  color: ${colors.fontColor};\n  font-weight: bold;\n`;\n\nconst PrintUserID = styled.p`\n    font-size: 1rem;\n    color: ${colors.fontColor};\n    font-weight: bold;\n`;\n\ninterface Props {\n  userInfoList: UserInfo[]\n}\n\nconst DivTeam = (props: Props) => {\n  const {redTeam, blueTeam} = divisionTeam(props.userInfoList)\n  return (\n    <>\n      {(redTeam.length === 0 || blueTeam.length === 0) ?\n        <NotDivTeam>{'팀을 나눌 수 없습니다.'}</NotDivTeam>\n        :\n        <DivTeamContainer>\n          <PrintTeam>\n            <TeamName teamColor='blue'>{'블루팀'}</TeamName>\n            {blueTeam.map((el,idx) => {\n              return (\n                <PrintUserID key={idx}>{el.userId}</PrintUserID>\n              )\n            })}\n          </PrintTeam>\n          <PrintTeam>\n            <TeamName teamColor='red'>{'레드팀'}</TeamName>\n            {redTeam.map((el,idx) => {\n              return (\n                <PrintUserID key={idx}>{el.userId}</PrintUserID>\n              )\n            })}\n          </PrintTeam>\n        </DivTeamContainer>\n      }\n    </>\n  );\n}\n\nexport default DivTeam","import { UserInfo } from '../../types/type';\n\n// 한팀에 중복된 라인\nexport const overlapPosition = (userInfoList:UserInfo[]):boolean => {\n\n    const teamOne = userInfoList.filter((el) => {\n        if (el.team === 1 && el.position !== 'None') {\n            return true\n        }\n        return false\n    }).map((el) => {\n        return el.position\n    })\n\n    const setTeamOne = new Set(teamOne)\n    if (teamOne.length !== setTeamOne.size) {\n        return false\n    }\n\n    const teamTwo =  userInfoList.filter((el) => {\n        if (el.team === 2 && el.position !== 'None') {\n            return true\n        }\n        return false\n    }).map((el) => {\n        return el.position\n    })\n    \n    const setTeamTwo = new Set(teamTwo)\n    if (teamTwo.length !== setTeamTwo.size ) {\n        return false\n    }\n\n    return true\n}\n// team인원 초과\nexport const excessPersonnel = (userInfoList:UserInfo[]):boolean => {\n    const teamOne = userInfoList.filter((el) => {\n        if (el.team === 1) {\n            return true\n        }\n        return false\n    })\n    \n    if (teamOne.length > userInfoList.length/2) {\n        return false\n    }\n\n    const teamTwo =  userInfoList.filter((el) => {\n        if (el.team === 2) {\n            return true\n        }\n        return false\n    })\n\n    if (teamTwo.length > userInfoList.length/2) {\n        return false\n    }\n\n    return true\n}\n\nexport const checkValidTeam = (userInfoList:UserInfo[]) => {\n    if (! overlapPosition(userInfoList)) {\n        throw new Error('overlapPosition')\n    }\n    if (! excessPersonnel(userInfoList)) {\n        throw new Error('excessPersonnel')\n    }\n}","import React from 'react';\nimport { UserInfo } from '../../types/type';\nimport styled from 'styled-components';\nimport { colors } from '../style/color';\n\nconst DeleteButton = styled.button`\n    background-color: ${colors.innerBox};\n    outline: none;\n    border: none;\n    cursor: pointer;\n\n    &:hover {\n        color: ${colors.fontColor}\n    }\n`;\n\ninterface Props {\n    userInfoList:UserInfo[],\n    setUserInfoList:React.Dispatch<React.SetStateAction<UserInfo[]>>,\n    userIndex: number;\n  }\n\nconst DeleteUser = (props: Props) => {\n    const deleteUserInfo = (e:React.MouseEvent<HTMLButtonElement>) => {\n        const filterUser = props.userInfoList.filter((element,index) => {\n            if (index === props.userIndex) {\n                return false\n            }\n            return true\n        })\n\n        props.setUserInfoList(filterUser);\n    }\n    return (\n        <DeleteButton onClick={deleteUserInfo}>{'X'}</DeleteButton>\n    );\n}\n\nexport default DeleteUser;","import React from 'react';\nimport { DragDropContext, Droppable, Draggable, DropResult } from 'react-beautiful-dnd';\nimport styled, { css } from 'styled-components';\nimport { UserInfo, Position } from '../../types/type';\nimport { overlapPosition,  excessPersonnel } from '../utils/checkValidTeam';\nimport { colors } from '../style/color';\nimport DeleteUser from './DeleteUser';\n\ninterface TeamTagProps {\n    teamNumber: number;\n}\n\nconst DragNDropStyle = styled.div`\n    margin-top: 10px;\n    display: flex;\n    justify-content: space-around;\n`;\n\nconst DropStyle = styled.div`\n    position: relative;\n    width: 250px;\n    padding: 30px;\n    border: 1px solid ${colors.line};\n    background-color: ${colors.box};\n    border-radius: 5px;\n`;\n\nconst TeamTag = styled.p`\n    position: absolute;\n    top: -10px;\n\n    ${({teamNumber}:TeamTagProps) => {\n        if (teamNumber === 0) {\n            return css`\n                color: ${colors.nonTeam};\n            `;\n        }\n        \n    \n        else if (teamNumber === 1) {\n            return css`\n                color: ${colors.oneTeam};\n            `;\n        }\n\n        else if (teamNumber === 2) {\n            return css`\n                color: ${colors.twoTeam};\n            `;\n        }\n    }}\n`;\n\nconst PrintUserInfo = styled.div`\n    padding: 0 5px 0 5px;\n    border: none;\n    border-radius: 5px;\n    background-color: ${colors.innerBox};\n    margin-bottom: 5px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    &:last-child {\n        margin-bottom: 0;\n    }\n\n    @media ${(props) => props.theme.mobile} {\n        display: inline-block;\n\n      }\n`;\n\nconst SelectUserPosition = styled.select`\n    border: none;\n    outline: none;\n    border-radius: 5px;\n    background-color: ${colors.innerBox};\n    color: ${colors.white};\n    \n    @media ${(props) => props.theme.mobile} {\n        font-size: 0.5rem;\n      }\n`;\n\nconst PrintUserID = styled.p`\n    font-size: 1rem;\n    color: ${colors.fontColor};\n    font-weight: bold;\n\n    @media ${(props) => props.theme.mobile} {\n        font-size: 0.5rem;\n      }\n`;\n\ninterface Props {\n    userInfoList: UserInfo[]\n    setUserInfoList: React.Dispatch<React.SetStateAction<UserInfo[]>>\n}\n\nconst DragNDrop = ({userInfoList, setUserInfoList}: Props) => {\n    const positionChange = (e:React.ChangeEvent<HTMLSelectElement>) => {\n        const position = e.target.value as Position\n        \n        const changeUserPosition = userInfoList.map((element) => {\n            if (element.userId === e.target.name) {\n                return {\n                    ...element,\n                    position: position\n                }\n                } else {\n                return {\n                    ...element\n                }\n            }\n        })\n\n        if (!overlapPosition(changeUserPosition)) {\n            alert('한 팀에 중복된 포지션이 있습니다.')\n        }\n\n        setUserInfoList(changeUserPosition)\n    }\n\n    const onDragEnd = (result:DropResult) => {\n        const { draggableId, destination } = result;\n\n        const movedTeam = destination ?  destination.droppableId : '0';\n\n        const moveUserInfo = userInfoList.map((el) => {\n            if (el.userId === draggableId) {\n                return {\n                    ...el,\n                    team: parseInt(movedTeam)\n                }\n            } else {\n                return {\n                    ...el\n                }\n            }\n        })\n\n        if (!excessPersonnel(moveUserInfo)) {\n            alert('한 팀에 너무 많은 인원이 있습니다.')\n        }\n\n        setUserInfoList(moveUserInfo)\n    }\n\n    return (\n        <DragNDropStyle>\n            <DragDropContext onDragEnd={onDragEnd}>\n                <Droppable droppableId='0'>\n                    {(provided) => (\n                        <DropStyle\n                            {...provided.droppableProps}\n                            ref={provided.innerRef}\n                        >\n                            <TeamTag teamNumber={0}>{'상관없음'}</TeamTag>\n                            {userInfoList.filter((el) => {\n                                if (el.team === 0) return true\n                                return false\n                            }).map((element,index) => {\n                                return (\n                                    <Draggable index={index} key={element.userId} draggableId={element.userId}>\n                                        {(provided) => \n                                        <PrintUserInfo\n                                            ref={provided.innerRef}\n                                            {...provided.dragHandleProps}\n                                            {...provided.draggableProps}\n                                        >\n                                            <PrintUserID>\n                                                {element.userId}\n                                            </PrintUserID>\n                                            <div>\n                                                <SelectUserPosition value={element.position} name={element.userId} onChange={positionChange}>\n                                                    <option value=\"None\">{`없음`}</option>\n                                                    <option value=\"Top\">{`탑`}</option>\n                                                    <option value=\"Junggle\">{`정글`}</option>\n                                                    <option value=\"Mid\">{`미드`}</option>\n                                                    <option value=\"ADC\">{`원딜`}</option>\n                                                    <option value=\"Support\">{`서폿`}</option>\n                                                </SelectUserPosition>\n                                                <DeleteUser userInfoList={userInfoList} setUserInfoList={setUserInfoList} userIndex={index} />   \n                                            </div>\n                                        </PrintUserInfo>\n                                        }\n                                    </Draggable>\n                                );\n                            })}\n                        </DropStyle>\n                    )}\n                </Droppable>\n                <Droppable droppableId='1'>\n                    {(provided) => (\n                        <DropStyle\n                        {...provided.droppableProps}\n                        ref={provided.innerRef}\n                    >\n                        <TeamTag teamNumber={1}>{'1팀'}</TeamTag>\n                        {userInfoList.filter((el) => {\n                            if (el.team === 1) return true\n                            return false\n                        }).map((element,index) => {\n                            return (\n                                <Draggable index={index} key={element.userId} draggableId={element.userId}>\n                                    {(provided) => \n                                        <PrintUserInfo\n                                        ref={provided.innerRef}\n                                        {...provided.dragHandleProps}\n                                        {...provided.draggableProps}\n                                    >\n                                        <PrintUserID>\n                                            {element.userId}\n                                        </PrintUserID>\n                                        <div>\n                                                <SelectUserPosition value={element.position} name={element.userId} onChange={positionChange}>\n                                                    <option value=\"None\">{`없음`}</option>\n                                                    <option value=\"Top\">{`탑`}</option>\n                                                    <option value=\"Junggle\">{`정글`}</option>\n                                                    <option value=\"Mid\">{`미드`}</option>\n                                                    <option value=\"ADC\">{`원딜`}</option>\n                                                    <option value=\"Support\">{`서폿`}</option>\n                                                </SelectUserPosition>\n                                                <DeleteUser userInfoList={userInfoList} setUserInfoList={setUserInfoList} userIndex={index} />   \n                                            </div>\n                                    </PrintUserInfo>\n                                    }\n                                </Draggable>\n                            );\n                        })}\n                        {provided.placeholder}\n                    </DropStyle>\n                    )}\n                </Droppable>\n                <Droppable droppableId='2'>\n                    {(provided) => (\n                        <DropStyle\n                        {...provided.droppableProps}\n                        ref={provided.innerRef}\n                    >\n                        <TeamTag teamNumber={2}>{'2팀'}</TeamTag>\n                        {userInfoList.filter((el) => {\n                            if (el.team === 2) return true\n                            return false\n                        }).map((element,index) => {\n                            return (\n                                <Draggable index={index} key={element.userId} draggableId={element.userId}>\n                                    {(provided) => \n                                        <PrintUserInfo\n                                        ref={provided.innerRef}\n                                        {...provided.dragHandleProps}\n                                        {...provided.draggableProps}\n                                    >\n                                        <PrintUserID>\n                                            {element.userId}\n                                        </PrintUserID>\n                                        <div>\n                                                <SelectUserPosition value={element.position} name={element.userId} onChange={positionChange}>\n                                                    <option value=\"None\">{`없음`}</option>\n                                                    <option value=\"Top\">{`탑`}</option>\n                                                    <option value=\"Junggle\">{`정글`}</option>\n                                                    <option value=\"Mid\">{`미드`}</option>\n                                                    <option value=\"ADC\">{`원딜`}</option>\n                                                    <option value=\"Support\">{`서폿`}</option>\n                                                </SelectUserPosition>\n                                                <DeleteUser userInfoList={userInfoList} setUserInfoList={setUserInfoList} userIndex={index} />   \n                                            </div>\n                                    </PrintUserInfo>\n                                    }\n                                </Draggable>\n                            );\n                        })}\n                        {provided.placeholder}\n                    </DropStyle>\n                    )}\n                </Droppable>\n            </DragDropContext>\n        </DragNDropStyle>\n    );\n}\n\nexport default DragNDrop","import React from 'react';\n\nconst Adsense = () => {\n    return (\n        <>\n        </>\n    );\n}\n\nexport default Adsense;","export default __webpack_public_path__ + \"static/media/multiSearch1.e69efc6f.png\";","export default __webpack_public_path__ + \"static/media/dragNdrop2.a25dcf69.png\";","export default __webpack_public_path__ + \"static/media/fixUserTeam.dae7e780.png\";","export default __webpack_public_path__ + \"static/media/fixUserTeam2.e7acccc8.png\";","import React from 'react';\nimport styled from 'styled-components';\nimport { colors } from '../../style/color';\nimport multiSearch1 from '../../img/multiSearch1.png';\nimport dragNdrop2 from '../../img/dragNdrop2.png';\nimport fixUserTeam from '../../img/fixUserTeam.png';\nimport fixUserTeam2 from '../../img/fixUserTeam2.png';\n\nconst ContentText = styled.p`\n    color: ${colors.fontColor};\n`;\n\nconst ContentImg = styled.img`\n    width: 100%;\n    image-rendering: auto;\n`;\n\nconst MenualContent = () => {\n    return (\n        <>\n            <ContentText>\n                {'Lol Team은 4인 6인 8인 10인의 롤플레이어들을 비슷한 MMR의 두 팀으로 나눠주는 프로그램입니다.'}\n            </ContentText>\n            <ContentText>\n                {'멀티서치 가능합니다.'}\n            </ContentText>\n            <ContentImg src={multiSearch1} />\n            <ContentText>\n                {'유저 카드를 드래그해서 1팀 또는 2팀으로 이동할 수 있습니다.'}\n            </ContentText>\n            <ContentImg src={dragNdrop2} />\n            <ContentText>\n                {'꼭 같은 팀이어야 하는 유저들을 1팀 또는 2팀으로 이동시켜 팀을 나눌 수 있습니다.'}\n            </ContentText>\n            <ContentImg src={fixUserTeam} />\n            <ContentImg src={fixUserTeam2} />\n            <ContentText>\n                {'자신있는 라인을 선택해 팀을 나눌 수 있습니다. 만약 같은 라인에 3명 이상의 유저가 지정되어있다면 MMR이 높은 유저 두명을 기준으로 팀이 나눠집니다.'}\n            </ContentText>\n            {/* <ContentText>\n                {'솔로 랭크 기준으로 MMR을 계산했으면 계산법은 아래 링크에서 확인하실 수 있습니다.'}\n            </ContentText> */}\n            <ContentText>\n                {'만약 언랭 유저인 경우 실버2 0포인트로 생각하여 MMR을 계산합니다.'}\n            </ContentText>\n            <ContentText>\n                {'나눠진 두 팀의 MMR은 거의 비슷하며 MMR이 높은 팀은 레드팀으로 배정됩니다.'}\n            </ContentText>\n        </>\n    );\n}\n\nexport default MenualContent;","import React from 'react';\nimport styled from 'styled-components';\nimport { colors } from '../../style/color';\nimport MenualContent from './MenualContent';\n\nconst Background = styled.div`\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.8);\n    position: fixed;\n    display: flex;\n    justify-content: center;\n    z-index: 1;\n`;\n\nconst ModalWrapper = styled.div`\n    width: 67%;\n    height: 70%;\n    padding: 10px;\n    border: 1px solid ${colors.white};\n    background-color: ${colors.innerBox};\n    border-radius: 15px;\n    text-align: left;\n    overflow: auto;\n`;\n\ninterface Props {\n    showModal: boolean;\n    setShowModal: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst MenualModal = ({ showModal, setShowModal }: Props) => {\n    return (\n        <>\n            {showModal ? \n                <Background>\n                    <ModalWrapper>\n                        <MenualContent/>\n                    </ModalWrapper>\n                </Background>\n            : null}\n        </>\n    );\n}\n\nexport default MenualModal;","import React from 'react';\nimport MenualModal from './MenualModal';\nimport styled from 'styled-components';\nimport { colors } from '../../style/color';\n\nconst MenualText = styled.p`\n    display: inline;\n    font-size: 13px;\n    color: ${colors.fontColor};\n    cursor: pointer;\n`;\n \nconst SplitMenu = styled.p`\n    display: inline;\n    font-size: 13px;\n    color: ${colors.fontColor};\n`;\n\nconst Menual = () => {\n    const [showModal, setShowModal] = React.useState(false);\n    const [showQuestion, setShowQuestion] = React.useState(false);\n\n    const openModal = (e:React.MouseEvent) => {\n        setShowModal(!showModal);\n        setShowQuestion(false);\n    }\n\n    const openQuestionModal = (e:React.MouseEvent) => {\n        setShowQuestion(!showQuestion);\n        setShowModal(false);\n    }\n\n    return (\n        <>\n            <MenualText onClick={openModal}>{showModal ? '닫기' : '사용방법'}</MenualText>\n            {/* <SplitMenu>{'    |    '}</SplitMenu>\n            <MenualText onClick={openQuestionModal}>{showQuestion ? '닫기' : '문의하기'}</MenualText> */}\n            <MenualModal showModal={showModal} setShowModal={setShowModal}/>\n        </>\n    );\n}\n\nexport default Menual;","import React from 'react';\nimport InsertUser from './components/InsertUser';\nimport DivTeam from './components/DivTeam'\nimport { UserInfo } from '../types/type'\nimport styled from 'styled-components';\nimport DragNDrop from './components/DragNDrop';\nimport { colors } from './style/color';\nimport Adsense from './components/Adsense';\nimport Menual from './components/menual/Menual';\n\nconst SelectOptionUser = styled.div`\n  text-align: center;\n  margin-top: 3rem;\n\n  @media ${(props) => props.theme.mobile} {\n    width: 100%;\n  }\n\n  @media ${(props) => props.theme.laptop} {\n    min-width: 900px;\n  }\n`;\n\nconst DivTeamButton = styled.button`\n  margin-top: 10px;\n  width: 120px;\n  height: 50px;\n  border: 0px;\n  font-size: 18px;\n  border-radius: 5px;\n  background-color: ${colors.innerBox};\n  color: ${colors.fontColor};\n\n  &:hover {\n    background-color: ${colors.background};\n    color:  #BDBDC0;\n    cursor: pointer;\n  }\n`;\n\nfunction App() {\n  const [userInfoList, setUserInfoList] = React.useState<UserInfo[]>([]);\n  const [runDivTeam, setRunDivTeam] = React.useState<boolean>(false);\n\n  const userLang = navigator.language;\n\n  console.log(userLang);\n\n  const clickDivTeam = (e: React.MouseEvent<HTMLButtonElement>) => {\n    if (userInfoList.length%2 !== 0) {\n      alert('인원을 짝수로 맞춰주세요')\n    } else {\n      setRunDivTeam(true)\n    }\n  }\n\n  const clickSearchTeam = (e: React.MouseEvent<HTMLButtonElement>) => {\n    setRunDivTeam(false)\n  }\n  \n  React.useEffect(() => {\n  },[userInfoList])\n\n  return (\n    <SelectOptionUser>\n      {runDivTeam === false ?\n        <>\n          <div>\n            <Menual/>\n            <InsertUser userInfoList={userInfoList} setUserInfoList={setUserInfoList}/>\n          </div>\n          <DragNDrop userInfoList={userInfoList} setUserInfoList={setUserInfoList}/>\n          <DivTeamButton onClick={clickDivTeam}>{'팀 나누기'}</DivTeamButton>\n        </>\n      :\n      <div>\n        <DivTeam userInfoList={userInfoList} />\n        <DivTeamButton onClick={clickSearchTeam}>{'인원 수정'}</DivTeamButton>\n      </div>\n      }\n      <Adsense />\n    </SelectOptionUser>\n  );\n}\n\nexport default App;\n","const size = {\n    mobile: `767px`,\n    tabletS: `1023px`,\n    tabletM: `1220px`,\n    tabletL: `1280px`,\n    laptop: `1460px`,\n    desktop: `1700px`,\n};\n\nexport const theme = {\n    mobile: `(max-width: ${size.mobile})`,\n    tabletS: `(max-width: ${size.tabletS})`,\n    tabletM: `(max-width: ${size.tabletM})`,\n    tabletL: `(max-width: ${size.tabletL})`,\n    laptop: `(min-width: ${size.laptop})`,\n    desktop: `(min-width: ${size.desktop})`,\n};\n\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\nimport { ThemeProvider } from 'styled-components';\nimport theme from './style/theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}