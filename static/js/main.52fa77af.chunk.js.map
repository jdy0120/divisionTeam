{"version":3,"sources":["assets/config.ts","utils/getUserInfo.ts","assets/gameEnv.ts","utils/calculate.ts","components/InsertUser.tsx","utils/division.ts","components/DivTeam.tsx","utils/checkValidTeam.ts","App.tsx","index.tsx"],"names":["API_KEY","getUserAccountId","userId","a","fetch","response","ok","json","Error","getUserInfo","id","tierMMR","IRON","BRONZE","SILVER","GOLD","PLATINUM","DIAMOND","MASTER","GRANDMASTER","CHALLENGER","rankMMR","IV","III","II","I","calculate","userInfo","wins","losses","rank","tier","leaguePoints","Math","round","divUserId","combinedID","divisionId","match","userIdGroup","map","element","replace","undefined","underRankMMR","underRankUserInfo","position","team","mmr","getUserRankInfo","userInfoList","el","queueType","filter","getUserInfoList","idState","Promise","all","name","userRankInfo","length","message","alert","fetchUserInfoList","filtUndefinedData","InsertUser","props","setUserInfoList","React","useState","setIdState","addId","e","type","onChange","target","value","onClick","makeBitMaskDivision","teamBitMask","userNoTeam","sort","b","userOneTeam","userTwoTeam","allUser","push","splitedIdx","splice","compareOne","idx","compareTwo","divisionPosition","userInfoListWithIdx","topUser","jugUser","midUser","adcUser","supUser","DivTeam","userList","diff","teamOneBitMask","teamTwoBitMask","i","console","log","teamOneMMR","teamTwoMMR","count","k","teamDiff","abs","teamOne","index","teamTwo","redTeam","blueTeam","divisionTeam","checkValidTeam","setTeamOne","Set","size","setTeamTwo","overlapPosition","excessPersonnel","App","runDivTeam","setRunDivTeam","positionChange","changeUserPosition","err","selectTeam","parseInt","changeUserTeam","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52fa77af.chunk.js","sourcesContent":["export const API_URL=`https://kr.api.riotgames.com`;\nexport const API_KEY=`RGAPI-0318b3a5-ce34-4213-8b33-ab0d3dd4e0f3`;","import { API_KEY } from '../assets/config'\n\nexport const getUserAccountId = async (userId:string): Promise<any>=> {\n    const response = await fetch(`https://kr.api.riotgames.com/lol/summoner/v4/summoners/by-name/${userId}?api_key=${API_KEY}`)\n    if (response.ok) {\n        return response.json()\n    } else {\n        throw new Error('Not Exist UserID')\n    }\n}\n\nexport const getUserInfo = async (id:string): Promise<any> => {\n    const response = await fetch(`https://kr.api.riotgames.com/lol/league/v4/entries/by-summoner/${id}?api_key=${API_KEY}`,)\n    if (response.ok) {\n        return response.json()\n    } else {\n        throw new Error('Not Exist UserInfo')\n    }\n}","/**\n   * i 450 ~ 750\n   * b 800 ~ 1100\n   * s 1150 ~ 1450\n   * g 1500 ~ 1800\n   * p 1850 ~ 2150\n   * d 2200 ~ 2500\n   * m 2550 ~ 3050\n   * gm 3100 + point\n   */\ntype TierMMR = {\n  [k in string]: number\n}\n\nexport const tierMMR:TierMMR = {\n  IRON: 450,\n  BRONZE:800,\n  SILVER:1150,\n  GOLD:1500,\n  PLATINUM:1850,\n  DIAMOND:2200,\n  // 마스터티어부터 모두 'I'티어이기 때문에 300점을 깍아줬다 calculate에서 300을 더하기 때문\n  MASTER:2250,\n  GRANDMASTER:2250,\n  CHALLENGER:2250,\n}\n\ntype RankMMR = {\n  [k in string]:number\n}\n\nexport const rankMMR:RankMMR = {\n  IV: 0,\n  III: 100,\n  II: 200,\n  I: 300,\n}\n\nexport const winPercentMMR = 10","import { MaterialMMR } from '../../types/type';\nimport { rankMMR, tierMMR, winPercentMMR } from '../assets/gameEnv';\n\nconst winRateMMr = (wins:number,losses:number):number => {\n  const winrate = Math.round((wins/(wins+losses)*100) * 10) / 10\n  return (winrate-50)*winPercentMMR\n  //(winrate - 50) * winPercentMMr\n}\n\nconst calculateMMR = (rank:string,tier:string,leaguePoints:number) => {\n  /**\n   * i 450 ~ 750\n   * b 800 ~ 1100\n   * s 1150 ~ 1450\n   * g 1500 ~ 1800\n   * p 1850 ~ 2150\n   * m 2200 ~ 2500\n   * gm 2550 ~ 3050\n   * c 3100 ~ +point\n   */\n  const convertTier = tierMMR[tier]\n  const convertRank = rankMMR[rank]\n  return convertTier + convertRank + leaguePoints\n}\n\nexport const calculate = (userInfo: MaterialMMR) => {\n  const convertWinRateMMR = winRateMMr(userInfo.wins,userInfo.losses)\n  \n  const convertTierMMR = calculateMMR(userInfo.rank,userInfo.tier,userInfo.leaguePoints)\n  return convertWinRateMMR + convertTierMMR\n}","import React from 'react';\nimport { UserInfo, MaterialMMR } from '../../types/type';\nimport { getUserInfo, getUserAccountId } from '../utils/getUserInfo';\nimport { calculate } from '../utils/calculate';\n\nconst divUserId = (combinedID:string): string[] => {\n  const regExp = /([a-z|A-z|0-9|ㄱ-ㅎ|ㅏ-ㅣ|가-힣]){1,}(님이 로비에 참가하셨습니다.)/g\n  const divisionId = combinedID.match(regExp)\n\n  const userIdGroup = divisionId?.map((element) => {\n    return element.replace('님이 로비에 참가하셨습니다.','')\n  })\n  if (divisionId === null) {\n    return [combinedID]\n  } else {\n    if (userIdGroup !== undefined) return userIdGroup;\n    return ['']\n  }\n}\n\n// default값 (underRank)는 실버 1 0포인트 승률: 50% 입니다.\nconst underRankMMR:MaterialMMR = {\n  tier: 'SILVER',\n  rank: 'I',\n  wins: 1,\n  losses: 1,\n  leaguePoints: 0,\n} \n\nconst underRankUserInfo: UserInfo = {\n  userId: '',\n  ...underRankMMR,\n  position: 'None',\n  team: 0,\n  mmr: calculate(underRankMMR)\n}\n\nconst getUserRankInfo = (userInfoList: UserInfo[]): UserInfo|undefined => {\n  \n  const userRankInfo = userInfoList.map((el:any):UserInfo|undefined => {\n    \n    if (el.queueType === \"RANKED_SOLO_5x5\") {\n      const { tier,rank,wins,losses,leaguePoints } = el\n      const materialMMR:MaterialMMR = {\n        tier,rank,wins,losses,leaguePoints\n      } \n      \n      return {\n        tier,\n        rank,\n        wins,\n        losses,\n        leaguePoints,\n        team: 0,\n        mmr: calculate(materialMMR)\n      }\n    }\n  }).filter((el) => {\n    if (el) {\n      return true\n    }\n  })\n  return userRankInfo[0]\n}\n\nconst getUserInfoList = async (idState:string,userInfoList:UserInfo[]):Promise<any> => {\n\n  const fetchUserInfoList = await Promise.all(divUserId(idState).map(async(element) => {\n    try{\n      const {id,name} =  await getUserAccountId(element)\n\n      const userInfo = await getUserInfo(id)\n\n      const userRankInfo = {\n        ...underRankUserInfo,\n        ...getUserRankInfo(userInfo),\n        userId: name\n      }\n      \n\n      // 중복검사\n      const confirmUserID = userInfoList.filter((element) => {\n        if (element.userId === name) return true\n      })\n\n      if (confirmUserID.length === 0) {\n        \n        return ({\n          ...userRankInfo\n        })\n      }\n      \n    } catch(err) {\n      switch (err.message) {\n        case 'Not Exist UserID':\n          alert(`${element}는 찾을 수 없는 아이디입니다.`)\n          break\n        case 'Not Exist UserInfo':\n          alert(`${element}의 랭크정보를 불러올 수 없습니다.`)\n          break\n        default:\n          alert(`${err.message} 알 수 없는 에러`)\n      }\n    }\n  }))\n\n  const filtUndefinedData = fetchUserInfoList.filter((el) => {if (el) return true})\n  return filtUndefinedData\n}\n\ninterface Props {\n  userInfoList:UserInfo[],\n  setUserInfoList:React.Dispatch<React.SetStateAction<UserInfo[]>>,\n}\n\nconst InsertUser = (props: Props) => {\n  const {userInfoList, setUserInfoList} = props\n  const [idState, setIdState] = React.useState<string>('');\n\n  const addId = async (e:React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    \n    const response = await  getUserInfoList(idState,userInfoList)\n    \n    setUserInfoList([\n      ...response,\n      ...userInfoList,\n    ])\n  };\n\n  return(\n    <>\n      <input type=\"text\" onChange={(e) => {setIdState(e.target.value)}} />\n      <button onClick={addId}>{`검색`}</button>\n    </>\n  );\n}\nexport default InsertUser;","import { UserInfo } from \"../../types/type\"\n\ntype DivedTeam = {\n    redTeam: UserInfo[],\n    blueTeam: UserInfo[]\n}\n\ninterface UserInfoIDX extends UserInfo {\n    idx:number\n}\n\nconst makeBitMaskDivision = (userInfoList: UserInfoIDX[], teamBitMask:number): boolean => {\n    const userNoTeam = userInfoList.filter((el) => {\n        if (el.team === 0) {\n            return true\n        }\n        return false\n    }).sort((a,b) => {\n        return b.mmr - a.mmr\n    })\n    const userOneTeam = userInfoList.filter((el) => {\n        if (el.team === 1) {\n            return true\n        }\n    }).sort((a,b) => {\n        return b.mmr - a.mmr\n    })\n    const userTwoTeam = userInfoList.filter((el) => {\n        if (el.team === 2) {\n            return true\n        }\n    }).sort((a,b) => {\n        return b.mmr - a.mmr\n    })\n\n    let allUser = []\n    if (userTwoTeam[0]) {\n        allUser.push(userTwoTeam[0])\n    }\n    if (userOneTeam[0]) {\n        allUser.push(userOneTeam[0])\n    }\n    if (userNoTeam[0]) {\n        allUser.push( ...userNoTeam )\n    }\n\n    if (allUser.length < 2) {\n        return true\n    } else {\n        let splitedIdx = allUser.splice(0,2)\n        const one = splitedIdx[0].idx\n        const two = splitedIdx[1].idx\n        \n        const compareOne = teamBitMask & (1<<one)\n        const compareTwo = teamBitMask & (1<<two)\n        if (compareOne && compareTwo) {\n            return false\n        }\n        if (compareOne === 0 && compareTwo === 0) {\n            return false\n        }\n        return true\n    }\n}\n\nconst divisionPosition = (userInfoList:UserInfo[], teamBitMask:number) => {\n    const userInfoListWithIdx:UserInfoIDX[] = userInfoList.map((el,idx) => {\n        return {\n            idx:idx,\n            ...el,\n        }\n    })\n\n    const topUser = userInfoListWithIdx.filter((el) => {\n        if (el.position === 'Top') return true\n    })\n\n    const jugUser = userInfoListWithIdx.filter((el) => {\n        if (el.position === 'Junggle') return true\n    })\n\n    const midUser = userInfoListWithIdx.filter((el) => {\n        if (el.position === 'Mid') return true\n    })\n\n    const adcUser = userInfoListWithIdx.filter((el) => {\n        if (el.position === 'ADC') return true\n    })\n\n    const supUser = userInfoListWithIdx.filter((el) => {\n        if (el.position === 'Support') return true\n    })\n\n    if (topUser.length >= 2) {\n        if (!makeBitMaskDivision(topUser,teamBitMask)) {\n            return false\n        }\n    }\n    if (jugUser.length >= 2) {\n        if (!makeBitMaskDivision(jugUser,teamBitMask)) {\n            return false\n        }\n    }\n    if (midUser.length >= 2) {\n        if (!makeBitMaskDivision(midUser,teamBitMask)) {\n            return false\n        }\n    }\n    if (adcUser.length >= 2) {\n        if (!makeBitMaskDivision(adcUser,teamBitMask)) {\n            return false\n        }\n    }\n    if (supUser.length >= 2) {\n        if (!makeBitMaskDivision(supUser,teamBitMask)) {\n            return false\n        }\n    }\n    return true\n}\n\nexport const divisionTeam= (userList: UserInfo[]): DivedTeam => {\n    let teamBitMask = -1\n    let diff = -1\n\n    let teamOneBitMask = 0\n    let teamTwoBitMask = 0\n    for (let i = 0 ; i < userList.length; i++) {\n        if (userList[i].team === 1) {\n            teamOneBitMask |= (1 << i)\n        } else if (userList[i].team === 2) {\n            teamTwoBitMask |= (1 << i)\n        }\n    }\n\n    console.log('team >>>', teamOneBitMask,teamTwoBitMask)\n\n    for (let i = 0; i < (1<<userList.length); i++) {\n        let teamOneMMR = 0\n        let teamTwoMMR = 0\n        let count = 0\n        for (let k = 0; k < userList.length; k++) {\n            if (((1 << k) & i )) {\n                count += 1\n                teamOneMMR += userList[k].mmr\n            } else {\n                teamTwoMMR += userList[k].mmr\n            }\n        }\n        if (userList.length/2 !== count) {\n            continue\n        }\n\n        if ((i&teamOneBitMask) || (i&teamTwoBitMask)){\n            continue\n        }\n\n        if (!divisionPosition(userList,i)) continue\n\n        const teamDiff = teamOneMMR-teamTwoMMR\n        \n        if (diff === -1 || Math.abs(diff) > Math.abs(teamDiff)) {\n            console.log(teamDiff,i)\n            diff = teamDiff\n            teamBitMask = i\n        }\n    }\n    \n    const teamOne = userList.filter((element,index) => {\n        if (teamBitMask & (1<<index)) {\n            return true\n        } else {\n            return false\n        }\n    })\n    const teamTwo = userList.filter((element,index) => {\n        if (teamBitMask & (1<<index)) {\n            return false\n        } else {\n            return true\n        }\n    })\n\n    if (diff >= 0) {\n        return {\n            redTeam: teamOne,\n            blueTeam: teamTwo,\n        }\n    } else {\n        return {\n            redTeam: teamTwo,\n            blueTeam: teamOne,\n        }\n    }\n}\n","import React from 'react';\nimport { UserInfo } from '../../types/type';\nimport { divisionTeam } from '../utils/division';\n\ninterface Props {\n  userInfoList: UserInfo[]\n}\n\nconst DivTeam = (props: Props) => {\n  const {redTeam, blueTeam} = divisionTeam(props.userInfoList)\n  \n  return (\n    <>\n      <div>\n        {'레드팀'}\n        {redTeam.map((el,idx) => {\n          return (\n            <p key={idx}>{el.userId}</p>\n          )\n        })}\n      </div>\n      <div>\n        {'블루팀'}\n        {blueTeam.map((el,idx) => {\n          return (\n            <p key={idx}>{el.userId}</p>\n          )\n        })}\n      </div>\n    </>\n  );\n}\n\nexport default DivTeam","import { UserInfo } from '../../types/type';\n\n// 한팀에 중복된 라인\nexport const overlapPosition = (userInfoList:UserInfo[]):boolean => {\n\n    const teamOne = userInfoList.filter((el) => {\n        if (el.team === 1 && el.position !== 'None') {\n            return true\n        }\n    }).map((el) => {\n        return el.position\n    })\n\n    const setTeamOne = new Set(teamOne)\n    if (teamOne.length !== setTeamOne.size) {\n        return false\n    }\n\n    const teamTwo =  userInfoList.filter((el) => {\n        if (el.team === 2 && el.position !== 'None') {\n            return true\n        }\n    }).map((el) => {\n        return el.position\n    })\n    \n    const setTeamTwo = new Set(teamTwo)\n    if (teamTwo.length !== setTeamTwo.size ) {\n        return false\n    }\n\n    return true\n}\n// team인원 초과\nexport const excessPersonnel = (userInfoList:UserInfo[]):boolean => {\n    const teamOne = userInfoList.filter((el) => {\n        if (el.team === 1) {\n            return true\n        }\n    })\n    \n    if (teamOne.length > userInfoList.length/2) {\n        return false\n    }\n\n    const teamTwo =  userInfoList.filter((el) => {\n        if (el.team === 2) {\n            return true\n        }\n    })\n\n    if (teamTwo.length > userInfoList.length/2) {\n        return false\n    }\n\n    return true\n}\n\nexport const checkValidTeam = (userInfoList:UserInfo[]) => {\n    if (! overlapPosition(userInfoList)) {\n        throw new Error('overlapPosition')\n    }\n    if (! excessPersonnel(userInfoList)) {\n        throw new Error('excessPersonnel')\n    }\n}","import React from 'react';\nimport InsertUser from './components/InsertUser';\nimport DivTeam from './components/DivTeam'\nimport { UserInfo, Position } from '../types/type'\nimport { checkValidTeam } from './utils/checkValidTeam';\n\nfunction App() {\n  const [userInfoList, setUserInfoList] = React.useState<UserInfo[]>([]);\n  const [runDivTeam, setRunDivTeam] = React.useState<boolean>(false);\n\n  const clickDivTeam = (e: React.MouseEvent<HTMLButtonElement>) => {\n    if (userInfoList.length%2 !== 0) {\n      alert('인원을 짝수로 맞춰주세요')\n    } else {\n      setRunDivTeam(true)\n    }\n  }\n\n  const clickSearchTeam = (e: React.MouseEvent<HTMLButtonElement>) => {\n    setRunDivTeam(false)\n  }\n\n  const positionChange = (e:React.ChangeEvent<HTMLSelectElement>) => {\n    const position = e.target.value as Position\n    \n    const changeUserPosition = userInfoList.map((element) => {\n      if (element.userId === e.target.name) {\n        return {\n          ...element,\n          position: position\n        }\n      } else {\n        return {\n          ...element\n        }\n      }\n    })\n    try {\n      checkValidTeam(changeUserPosition)\n    } catch(err) {\n      switch (err.message) {\n        case 'overlapPosition':\n          alert('한 팀에 중복된 라인이 있습니다.')\n          break\n        case 'excessPersonnel':\n          alert('한 팀에 너무 많은 인원이 있습니다.')\n          break\n        default:\n          alert('알 수 없는 오류')\n      }\n    }\n    setUserInfoList(changeUserPosition)\n  }\n\n  const selectTeam = (e:React.ChangeEvent<HTMLSelectElement>) => {\n    const team = parseInt(e.target.value)\n\n    const changeUserTeam = userInfoList.map((element) => {\n      if (element.userId === e.target.name) {\n        return {\n          ...element,\n          team: team\n        }\n      } else {\n        return {\n          ...element\n        }\n      }\n    })\n    try {\n      checkValidTeam(changeUserTeam)\n    } catch (err) {\n      switch (err.message) {\n        case 'overlapPosition':\n          alert('한 팀에 중복된 라인이 있습니다.')\n          break\n        case 'excessPersonnel':\n          alert('한 팀에 너무 많은 인원이 있습니다.')\n          break\n        default:\n          alert('알 수 없는 오류')\n      }\n    }\n    setUserInfoList(changeUserTeam)\n  }\n  \n  React.useEffect(() => {\n    console.log(userInfoList)\n  },[userInfoList])\n\n  return (\n    <>\n      {runDivTeam === false ?\n        <div>\n          <InsertUser userInfoList={userInfoList} setUserInfoList={setUserInfoList}/>\n          \n            {userInfoList?.map((element,index) => {\n              return (\n                <div key={index}>\n                  <p >{element.userId}</p>\n                  <select value={element.position} name={element.userId} onChange={positionChange}>\n                    <option value=\"None\">{`없음`}</option>\n                    <option value=\"Top\">{`탑`}</option>\n                    <option value=\"Junggle\">{`정글`}</option>\n                    <option value=\"Mid\">{`미드`}</option>\n                    <option value=\"ADC\">{`원딜`}</option>\n                    <option value=\"Support\">{`서폿`}</option>\n                  </select>\n                  <select value={element.team} name={element.userId} onChange={selectTeam}>\n                    <option value=\"0\">{`상관없음`}</option>\n                    <option value=\"1\">{`1팀`}</option>\n                    <option value=\"2\">{`2팀`}</option>\n                  </select>\n                </div>\n              );\n            })}\n          <button onClick={clickDivTeam}>{'팀 나누기'}</button>\n        </div>\n      :\n      <div>\n        <DivTeam userInfoList={userInfoList} />\n        <button onClick={clickSearchTeam}>{'인원 수정'}</button>\n      </div>\n      }\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}